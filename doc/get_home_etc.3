.\" Copyright (c) 2003 by Pawe³ Wilk <siefca@gnu.org>
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2
.\" or any later version published by the Free Software Foundation;
.\" with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
.\" A copy of the license is included in the section entitled "GNU
.\" Free Documentation License"; if it's not, contact Free Software Foundation, Inc.
.\" 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA to obtain one.
.\"
.TH get_home_etc "3" "PLD Linux/GNU" "December 2003" "HOME-ETC"
.SH NAME
get_home_etc \- obtain the location of user configuration directory
.SH SYNOPSIS
.nf
.B #include <home_etc.h>
.sp
.BI "const char *get_home_etc(char "use_env );
.sp
.BI "const char *get_home_etc_static(char "use_env );
.sp
.BI "const char *_HEdir;"
.BI "const char *_HEndir;"
.sp
.B #define _HE_DAEMON
.B #include <home_etc.h>
.BI "const char *___HEdir;"
.fi
.SH DESCRIPTION
The function \fBget_home_etc(3)\fP is used to obtain the directory name
decided by user to store configuration files for the applications.
It makes the following things:
.LP
\- it checks whether the \fBHOME_ETC\fP environment variable is set
and if it is it trustes it
.LP
\- if the HOME_ETC is not set, it tries to obtain user's
home directory in two ways: via HOME anvironment variable
(if the \fIuse_env\fP was non-zero) and in case of failure
via \fBgetpwuid(3)\fP
.LP
\- having a home directory it tries to open the file called
.I ~/.home_etc
.LP
\- if the file is opened it tries to read the first line
.LP
\- if the first line is found and it is a path it trustes it
.LP
\- if the path is not absolute it is absolutized using obtained
home directory pathname

The function \fBget_home_etc_static(3)\fP is a wrapper, which works the same way,
but it will remember the internal pointer, and executed once it won't call the
\fBget_home_etc(3)\fP again if the buffer is not NULL or is not an empty string.
This function caches obtained data.

\fB_HEdir\fP is a macro for this function, which never returns NULL, since NULL
wasn't given as an argument. It calls \fBhome_etc_path_static(3)\fP and in case
of failure it simply returns the given pathname. It always sets \fIuse_env\fP
to a non-zero.

\fB_HEndir\fP is a macro for this function, which never returns NULL, since NULL
wasn't given as an argument. It calls \fBhome_etc_path(3)\fP and in case
of failure it simply returns the given pathname. It always sets \fIuse_env\fP
to zero.

\fB___HEdir\fP is a macro for this function, which never returns NULL, since NULL
wasn't given as an argument. It calls \fBhome_etc_path(3)\fP and in case
of failure it simply returns the given pathname. It doesn't uses the environment
variables (\fBHOME\fP and \fBHOME_ETC\fP) if the \fB_HE_DAEMON\fP was defined
before including the header file.

.SH "RETURN VALUE"
This function returns the pointer to a static buffer containing
the pathname of a directory or NULL if something went bad and the path
cannot be obtained.

.SH WARNINGS
Be ware of setting \fIuse_env\fP to non-zero for deamons
which can inherit the environment variables at start and
are not setting it again when changing the UID/EUID. These
are daemons, that (so-called) aren't touching users' environment.
In such cases the results may be wrong.
    
The static buffer has a length of a MAXPATHLEN bytes. In case of
a larger strings the NULL is generated while parsing.

.SH "SEE ALSO"
.BR getenv(3),
.BR getpwnam(3),
.BR home_etc(3),
.BR home_etc_path(3),
.BR home_etc_reset(3)

.SH LICENSE
The HOME-ETC library is distributed under the terms of GNU LGPL.
This documentation is distributed under the terms of GNU FDL.
       
.SH AUTHOR
Pawel Wilk <siefca@gnu.org>
There was also a lot of other people, who have contributed to this code
and/or helped with patching applications. See the AUTHORS and the CONTRIBUTORS files.

