.\" Copyright (c) 2006 by Pawe³ Wilk <siefca@gnu.org>
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2
.\" or any later version published by the Free Software Foundation;
.\" with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
.\" A copy of the license is included in the section entitled "GNU
.\" Free Documentation License"; if it's not, contact Free Software Foundation, Inc.
.\" 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA to obtain one.
.\"
.TH path_canonize "3" "PLD Linux/GNU" "May 2006" "HOME-ETC"
.SH NAME
path_canonize \- pathname canonizer
.SH SYNOPSIS
.nf
.B #include <home_etc.h>
.sp
.BI "const char *path_canonize(const char *" pathname ", char " use_env );
.fi
.SH DESCRIPTION
This function tries to make the given \fIpathname\fP absolute.
It tries to canonize as much parts of the found subdirectories as
it is possible.

If \fBhome_etc_expand_tile(3)\fP has been used before to enable
tilde-slash pair parsing, the function treats \fI~/\fP as if it
was user's home directory path (in fact it internally replaces it first
and then goes to re-parse it, to make sure that the home directory is ok).
Additionally, the \fI~\fP character is also translated into user's home
directory name, but only if the whole parsed path contains only that
one character. The \fIuse_env\fP is a swich which determines the method
to obtain user's home directory. If it's set to 1 home directory is
obtained using \fIHOME\fP environment variable. If it is set to 0,
then the home directory is taken from system by calling \fBgetpwuid(3)\fP.

It uses filesystem calls \fBchdir(2)\fP and \fBgetcwd(3)\fP to canonize
accessible parts of the given pathname. It also tries to use simple
string substitution to canonize parts of the given pathname, which
are unseen or unaccessible for a current process. It does it by
parsing strings such as \fI..\fP and \fI.\fP and multiple \fI/\fP
and replaces parts of the pathname according to known logic.

If it is possible this function checks the last part of the given
pathname and removes trailing slash when the last part is a file,
not a directory. For directories in fact, it does not removes the
trailer when it was found in the pathname nor adds it.

.SH "RETURN VALUE"
This function returns the pointer to a static buffer containing
the newly generated pathname or NULL if something went bad.

.SH EXAMPLES
for HOME=\fI/home/users/siefca\fP
.sp    
this function call:
.sp
.BI "_HE_LIKE_TILDE;
.BI "path_canonize("""~/././../siefca/.muttrc/ """, " 1 );
.sp    
will return:
.I /home/users/siefca/.muttrc

.SH WARNINGS
Be ware of setting \fBuse_env\fP to non-zero for deamons
which can inherit the environment variables at start and
are not setting it again when changing the UID/EUID. These
are daemons, that (so-called) aren't touching users' environment.
In such cases you may get false results.

The static buffer has a length of a MAXPATHLEN bytes. In case of
a larger strings the NULL is generated while parsing.

.SH "SEE ALSO"
.BR home_etc_expand_tile(3),
.BR chdir(2),
.BR getcwd(3),
.BR getpwuid(3)

.SH LICENSE
The HOME-ETC library is distributed under the terms of GNU LGPL.
This documentation is distributed under the terms of GNU FDL.
       
.SH AUTHOR
Pawel Wilk <siefca@gnu.org>
There was also a lot of other people, who have contributed to this code
and/or helped with patching applications. See the AUTHORS and the CONTRIBUTORS files.

